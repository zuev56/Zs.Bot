<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension="generated.cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)Zl.Common.T4\bin\Debug\Zs.Common.T4Generator.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Zs.Common.T4Generator" #>

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Zs.Bot.Model.Db
{
<#
PushIndent("    ");
    try
    {
        var projectDir = Host.ResolveAssemblyReference("$(ProjectDir)");
        var filePath = $@"{projectDir}\DbModel\TableNameToClassNameMap.txt";
        
        var connectionString = "Host=localhost;Port=5632;Username=postgres;Password=postgres;Database=Robot;";//ModelGenerator.GetConfigurationValue(@"M:\Zs.Bot\Zs.Bot\AppSettings.json", "T4_ConnectionString");
        
        // Этот вариант не отрабатывает, т.к. T4Generator - 4.8, а не Core
        //var connectionString = ModelGenerator.GetConfigurationValue($@"{projectDir}\Zs.Bot.Model.json", "T4_ConnectionString");
        
        var tableToClassNameMap = ModelGenerator.GetTableNameToClassNameMap(filePath);
        
        var databaseInfo = DbReader.GetDbInfo(connectionString);
        
        ModelGenerator.GenerateClasses(
            this,
            databaseInfo,
            "public",
            "Db",
            true,
            tableToClassNameMap
        );
    }
    catch (Exception ex)
    {
        if (ex.InnerException != null)
        {
            WriteLine($"{ex.InnerException.Message}");
            WriteLine("");
            WriteLine($"{ex.InnerException.StackTrace}");
        }

        WriteLine($"{ex.Message}");
        WriteLine("");
        WriteLine($"{ex.StackTrace}");
    }
    PopIndent();
#>
}